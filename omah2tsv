#!/usr/bin/env python

import sys
import os
from Bio import SeqIO

if len(sys.argv) < 2:
    print('USAGE: oma2tsv OMAXML_OGs')
    sys.exit(1)

infile = sys.argv[1]

f = open('pangenome.tsv', 'w')
f.write('#')
f.write('\t'.join(['orth_id', 'prot_id', 'org_id']))
f.write('\n')

def getGeneRefs(group):
    for subgroup in group.get_orthologGroup():
        for rid in getGeneRefs(subgroup):
            yield rid

    for subgroup in group.get_paralogGroup():
        for rid in getGeneRefs(subgroup):
            yield rid

    for r in group.get_geneRef():
        yield r.id

try:
    from orthoxml import parse
except ImportError:
    print('The orthoxml library is missing!')
    print('Try to download it from here: %s'
           % 'https://raw.githubusercontent.com/jhcepas/'+
             'phylogenetic-XML-python-parsers/master/orthoxml.py')
    sys.exit(1)

b = parse(infile)

gs = b.get_groups()

d = {}
seen = {}

f = open('pangenome.tsv', 'w')
f.write('#')
f.write('\t'.join(['orth_id', 'prot_id', 'org_id']))
f.write('\n')

# orth_id --> geneRefs
for g in gs.get_orthologGroup():
    orth_id = g.id

    d[orth_id] = {}

    grefs = set()
    # Recursvive search for geneRefs
    for gref in getGeneRefs(g):
        grefs.add(gref)
        if gref in seen:
            print('Already seen! %s'%gref)
        seen[gref] = orth_id
        
        d[orth_id][gref] = None

i = 1

d1 = {}

for s in b.get_species():
    sname = s.name

    for db in s.get_database():
        dg = db.get_genes()
        for p in dg.get_gene():
            prot_id = p.protId.split()[0]
            gref = p.id

            if gref not in seen:
                orth_id = 'UNIQUE%d'%i
                i += 1
                d1[orth_id] = {}
                d1[orth_id][prot_id] = sname
            else:
                orth_id = seen[gref]
                d1[orth_id] = d1.get(orth_id, {})
                d1[orth_id][prot_id] = sname

for k in sorted(d1):
    for p in d1[k]:
        f.write('\t'.join([str(k), p, d1[k][p]]))
        f.write('\n')

f.close()
