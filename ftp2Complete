#!/usr/bin/env python

import os
import logging
import json

from logging import handlers

from bacteria2go.colorlog import ColorFormatter
from bacteria2go import __version__
from bacteria2go import dict2Strain

__author__ = "Marco Galardini"

def getOptions():
    import argparse

    # create the top-level parser
    description = "Fetch the complete genomes from a NCBI ftp directory"
    parser = argparse.ArgumentParser(description = description,
                                    prog = 'ftp2Complete')
    parser.add_argument('ftpdir', action='store',
                        help='Genomes directory')
    parser.add_argument('exclude', action='store', nargs='?',
                        default=None,
                        help='Genomes to be excluded (contains the names of the directories)')

    parser.add_argument('-v', action='count',
                        default=0,
                        help='Increase verbosity level')
    parser.add_argument('--version', action='version',
                        version='%(prog)s '+__version__)

    return parser.parse_args()
    
if __name__ == "__main__":
    options = getOptions()

    # Log setup
    logger = logging.getLogger()

    ch = logging.StreamHandler()
    if options.v == 0:
        ch.setLevel(logging.INFO)
    elif options.v >= 1:
        ch.setLevel(logging.DEBUG)
    formatter = ColorFormatter('%(asctime)s - $COLOR%(message)s$RESET','%H:%M:%S')
    ch.setFormatter(formatter)
    logger.addHandler(ch)

    logger.setLevel(logging.DEBUG)

    fh = handlers.RotatingFileHandler('ftp2Complete.log', maxBytes=2000000)
    formatter = logging.Formatter('%(asctime)s - %(name)s - [%(levelname)s] - %(message)s',
                            '%Y-%m-%d %H:%M:%S')
    fh.setFormatter(formatter)
    logger.addHandler(fh)
   
    ftpdir = options.ftpdir

    # Start
    exclude = set()
    if options.exclude is not None:
        for l in open(options.exclude):
            l = l.strip()
            exclude.add(l)

    logger.info('Looking into %s'%(options.ftpdir))

    strains = set()
    filez = os.listdir(options.ftpdir)
    for d in filter(lambda x: os.path.isdir(
                                    os.path.join(ftpdir, x)),
                    os.listdir(ftpdir)):
        if d in exclude:
            logger.warning('Skipping %s'%d)
            continue
        if 'uid' in d and '%s.json'%d in filez:
            strains.add(d)

    logger.info('Searching complete genomes from %d strains'%len(strains))
    
    complete = 0
    i = 0
    for strain in strains:
        i += 1
        sfile = os.path.join(ftpdir, '%s.json'%strain)
        saved = dict2Strain( json.load(open(sfile)) ) 

        if saved.complete is True:
            print('%s'%strain)
            complete += 1

    logger.info('Found %d complete genomes over %d'%(complete, len(strains)))
